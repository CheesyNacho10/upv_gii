1
00:00:00,980 --> 00:00:05,030
In this video we will present the
non-deterministic model of finite automaton

2
00:00:06,070 --> 00:00:08,890
we have already seen that finite
automata are devices that

3
00:00:08,890 --> 00:00:10,820
allow us to describe
formal languages

4
00:00:11,320 --> 00:00:15,280
and we have seen that all the states
of a finite deterministic automaton

5
00:00:15,460 --> 00:00:18,780
have, at most, one transition labeled
with each symbol in the alphabet

6
00:00:19,640 --> 00:00:23,810
this makes that in every finite
deterministic automaton only exists

7
00:00:23,810 --> 00:00:25,340
a way to process
each word

8
00:00:26,650 --> 00:00:29,800
the non-deterministic finite automata
model allows the existence

9
00:00:29,800 --> 00:00:33,650
of more than one outgoing transition labeled
with the same symbol for every state

10
00:00:35,820 --> 00:00:39,520
in this way, as well as every
finite determinist automaton

11
00:00:39,750 --> 00:00:43,160
the non-deterministic model also
considers a set of states

12
00:00:43,530 --> 00:00:47,810
a set of transitions, an
initial state, and a set

13
00:00:47,810 --> 00:00:50,490
of states that are distinguished
as final or acceptance states

14
00:00:51,290 --> 00:00:54,600
however, in this model it is
possible that transitions

15
00:00:54,760 --> 00:00:58,390
that start from the same state are
labeled with the same symbol

16
00:00:58,680 --> 00:00:59,890
like those that
are marked.

17
00:01:02,160 --> 00:01:06,770
In the non-deterministic model the processing
of a word concludes with acceptance

18
00:01:06,930 --> 00:01:10,280
if there exists a path that
fully considers the sequence

19
00:01:10,280 --> 00:01:15,430
of symbols of the word and leads from
the initial status to a final state,

20
00:01:13,610 --> 00:01:15,430
initial status to
a final state

21
00:01:16,160 --> 00:01:20,690
therefore, a way of represent the processing
in a finite, non-deterministic automaton

22
00:01:20,910 --> 00:01:24,270
consists of obtaining all
possible analysis paths.

23
00:01:25,850 --> 00:01:29,220
To obtain all these paths
we will build a diagram

24
00:01:29,380 --> 00:01:34,010
which, on the one hand, considers all the states
of the finite non-deterministic automaton

25
00:01:34,220 --> 00:01:41,270
and, on the other hand, the symbols of
the word to analyze in this case abbaba

26
00:01:42,600 --> 00:01:45,690
as in the deterministic model,
the processing of the word

27
00:01:45,690 --> 00:01:47,640
start by considering
the initial state

28
00:01:48,450 --> 00:01:53,390
and every transition from
this state is labeled

29
00:01:53,410 --> 00:01:54,920
with the first
symbol of the word

30
00:01:55,950 --> 00:02:00,790
this example there are two transitions
that reach states one and two

31
00:02:02,180 --> 00:02:05,850
these are the states that are taken into
account to consider the second symbol

32
00:02:07,560 --> 00:02:09,450
in this example
the state one

33
00:02:10,080 --> 00:02:12,690
has two transitions labeled
with the symbol b which is

34
00:02:12,690 --> 00:02:13,820
the one to consider

35
00:02:14,650 --> 00:02:16,940
these transitions reach
the states zero and two

36
00:02:17,660 --> 00:02:21,810
state two also has two transitions
labeled with the symbol b

37
00:02:22,020 --> 00:02:24,140
which also reach the
states zero and two.

38
00:02:25,010 --> 00:02:29,070
Therefore, states zero and two are
the ones to take into account

39
00:02:29,250 --> 00:02:31,250
to analyze the third
symbol of the word

40
00:02:33,210 --> 00:02:36,230
In this case there are no transitions
labeled with the symbol b

41
00:02:36,420 --> 00:02:39,440
from state zero, so only
are considered the

42
00:02:39,440 --> 00:02:41,350
two outgoing transitions
from state two

43
00:02:42,220 --> 00:02:46,470
these transitions reach again the states
zero and two, and we go on to process

44
00:02:46,610 --> 00:02:47,440
the fourth symbol

45
00:02:49,650 --> 00:02:54,030
It happens now that there are only
transitions from the zero state

46
00:02:54,160 --> 00:02:55,560
labeled with
the symbol a

47
00:02:56,240 --> 00:02:59,660
so we reach states
one and two.

48
00:03:00,280 --> 00:03:01,660
which are the ones
we will consider

49
00:03:02,300 --> 00:03:03,890
to analyze the second
symbol from the end.

50
00:03:09,850 --> 00:03:13,130
The situation is identical to
the one we saw in the second

51
00:03:13,130 --> 00:03:17,650
processing step of this word, that
is, the analysis of the symbol b

52
00:03:17,890 --> 00:03:19,840
from states one and two

53
00:03:21,170 --> 00:03:24,720
as we have already seen, the
states reached are zero and two.

54
00:03:25,270 --> 00:03:26,990
and we go on to analyze
the last symbol.

55
00:03:30,400 --> 00:03:33,750
Again a situation that we have already
seen. The analysis of symbol a

56
00:03:33,860 --> 00:03:36,670
from the states
zero and two.

57
00:03:38,070 --> 00:03:41,250
as we saw, the states one
and two are reached.

58
00:03:41,790 --> 00:03:42,740
and the process
is over.

59
00:03:49,660 --> 00:03:53,550
Once this process is finished
the diagram represents all the

60
00:03:53,560 --> 00:03:55,970
different ways of
processing the word

61
00:04:01,810 --> 00:04:06,630
In this case, there exist a
path from the initial state

62
00:04:06,630 --> 00:04:08,110
to a final state

63
00:04:08,820 --> 00:04:10,200
and that this path
is not unique

64
00:04:12,120 --> 00:04:15,750
therefore we can conclude that the
word belongs to the language

65
00:04:15,750 --> 00:04:17,060
represented by
the automaton.

66
00:04:19,340 --> 00:04:22,250
The existence of other paths
that fully process the

67
00:04:22,250 --> 00:04:25,000
word and do not end
in a final state

68
00:04:29,010 --> 00:04:32,370
or even, paths that are not able
to fully process the word

69
00:04:33,540 --> 00:04:36,400
do not prevent the word
from being accepted

70
00:04:37,120 --> 00:04:40,150
by the automaton
since the condition

71
00:04:41,670 --> 00:04:46,370
requires only the existence
of a path leading to

72
00:04:46,370 --> 00:04:47,100
a final state.

73
00:04:50,910 --> 00:04:54,440
Another way to see the analysis of
a word in one of these models

74
00:04:54,770 --> 00:04:58,530
it is to consider that there is a
non-deterministic process that

75
00:04:58,530 --> 00:05:01,750
once considered a symbol of the
word chooses a transition

76
00:05:01,750 --> 00:05:02,880
among the possible,

77
00:05:03,920 --> 00:05:07,820
in this way, and taking into account
the same example, the process would

78
00:05:07,820 --> 00:05:09,330
start from the initial
state of the automaton,

79
00:05:09,930 --> 00:05:11,440
it would consider
the first symbol,

80
00:05:12,430 --> 00:05:16,160
and the outgoing transitions labeled
with this from the marked state

81
00:05:17,730 --> 00:05:20,750
among the marked transitions
the non-deterministic process

82
00:05:20,750 --> 00:05:22,740
that we have mentioned
selects one of them,

83
00:05:23,400 --> 00:05:27,790
which is the one considered to
build the processing path,

84
00:05:28,820 --> 00:05:32,330
and, therefore, the one that determines
the next state to consider

85
00:05:33,720 --> 00:05:37,800
in this point, it is assumed that the
first symbol has been processed

86
00:05:38,310 --> 00:05:39,880
and we take into
account the second.

87
00:05:42,150 --> 00:05:45,360
we proceed in the same way,
selecting the transitions that

88
00:05:45,360 --> 00:05:49,510
are labeled with the symbol to consider and are
outgoing transitions from the indicated state

89
00:05:50,820 --> 00:05:53,260
selecting in a non-deterministic
way one of them

90
00:05:54,770 --> 00:05:58,140
allows to update the processing
path and the state

91
00:05:58,140 --> 00:06:00,120
reached with the
first two symbols

92
00:06:01,020 --> 00:06:04,230
from this state the following
symbol is processed.

93
00:06:06,410 --> 00:06:10,210
The process continues in
the same way by selecting

94
00:06:10,210 --> 00:06:13,290
in a non-deterministic way one
of the possible transitions,

95
00:06:14,210 --> 00:06:19,300
updating the path, and the state
reached with the symbols

96
00:06:19,380 --> 00:06:20,470
that we have already
processed.

97
00:06:21,550 --> 00:06:26,600
This state, again, is the one considered
to analyze the next symbol.

98
00:06:25,700 --> 00:06:26,600
next symbol

99
00:06:28,790 --> 00:06:31,750
The process continues
in the same way

100
00:06:37,010 --> 00:06:40,340
using the state reached by the
non-deterministic process

101
00:06:40,600 --> 00:06:42,690
to process the
following symbol.

102
00:06:50,950 --> 00:06:52,840
And always in the same way,
considering the possible transitions

103
00:06:53,760 --> 00:06:55,220
selecting one of them

104
00:06:55,980 --> 00:06:57,240
updating the way

105
00:06:57,950 --> 00:07:01,770
the reached state, that summarizes
the processing of all

106
00:07:01,770 --> 00:07:03,480
symbols considered
so far.

107
00:07:06,890 --> 00:07:11,360
The non-deterministic process
guarantees that in case that

108
00:07:11,360 --> 00:07:13,590
the word belongs to the language
that represents the automaton

109
00:07:14,000 --> 00:07:18,110
once processed, it is
accepted and one of the

110
00:07:18,110 --> 00:07:19,490
possible paths
of acceptance

111
00:07:22,180 --> 00:07:25,110
With respect to the construction of
finite, non-deterministic automata

112
00:07:25,380 --> 00:07:28,660
there are no general rules that allow
the construction of an automaton

113
00:07:28,790 --> 00:07:30,800
regardless the
language considered,

114
00:07:31,690 --> 00:07:35,540
however, the non-deterministic
model is sometimes

115
00:07:35,540 --> 00:07:39,800
intuitive enough to get a
description in certain languages,

116
00:07:40,720 --> 00:07:46,100
for example, in this case it can be
seen easily that the language that

117
00:07:46,200 --> 00:07:51,230
the automaton shown accepts is that
of words formed by symbols a and b

118
00:07:51,840 --> 00:07:53,350
containing the
segment bb,

119
00:07:54,190 --> 00:07:58,080
because the only way to
access the final state is

120
00:07:58,080 --> 00:08:00,070
to process two
consecutive bs.

121
00:08:01,720 --> 00:08:05,610
The initial loop allows to
process the prefix of any word

122
00:08:05,610 --> 00:08:09,630
of the language to find the bb
segment we're looking for.

123
00:08:11,390 --> 00:08:15,970
The loop on the final state shows
that once this state is reached,

124
00:08:16,110 --> 00:08:20,090
let's say with a word x, it is
accepted as a word of the language,

125
00:08:20,180 --> 00:08:23,280
anyone that contains
as a prefix x,

126
00:08:23,770 --> 00:08:28,000
because it ensures that x
contains the bb secgment.

127
00:08:31,180 --> 00:08:35,720
It is important to mention that, in
general, the non-deterministic model

128
00:08:35,810 --> 00:08:39,720
allows for more concise representations of
languages than the deterministic model

129
00:08:40,550 --> 00:08:44,320
as an example the smallest DFA that
accepts the represented language

130
00:08:44,460 --> 00:08:47,080
for this automaton
has eight states

